<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqcfsw.databatch.mapper.TestDataMapper">
  <resultMap id="BaseResultMap" type="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    <!--@Table test-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="field1" jdbcType="VARCHAR" property="field1" />
    <result column="field2" jdbcType="VARCHAR" property="field2" />
    <result column="field3" jdbcType="VARCHAR" property="field3" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, field1, field2, field3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    insert into test (id, field1, field2, 
      field3)
    values (#{id,jdbcType=INTEGER}, #{field1,jdbcType=VARCHAR}, #{field2,jdbcType=VARCHAR}, 
      #{field3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="field1 != null">
        field1,
      </if>
      <if test="field2 != null">
        field2,
      </if>
      <if test="field3 != null">
        field3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="field1 != null">
        #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        #{field3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    update test
    <set>
      <if test="field1 != null">
        field1 = #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        field2 = #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        field3 = #{field3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    update test
    set field1 = #{field1,jdbcType=VARCHAR},
      field2 = #{field2,jdbcType=VARCHAR},
      field3 = #{field3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update test
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="field1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.field1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="field2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.field2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="field3 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.field3,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into test
    (id, field1, field2, field3)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.field1,jdbcType=VARCHAR}, #{item.field2,jdbcType=VARCHAR}, 
        #{item.field3,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    insert into test
    (id, field1, field2, field3)
    values
    (#{id,jdbcType=INTEGER}, #{field1,jdbcType=VARCHAR}, #{field2,jdbcType=VARCHAR}, 
      #{field3,jdbcType=VARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=INTEGER}, 
    field1 = #{field1,jdbcType=VARCHAR}, 
    field2 = #{field2,jdbcType=VARCHAR}, 
    field3 = #{field3,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.cqcfsw.databatch.entity.TestData">
    <!--@mbg.generated-->
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="field1 != null">
        field1,
      </if>
      <if test="field2 != null">
        field2,
      </if>
      <if test="field3 != null">
        field3,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="field1 != null">
        #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        #{field3,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="field1 != null">
        field1 = #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        field2 = #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        field3 = #{field3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectAll"  resultMap="BaseResultMap">
    select id, field1, field2, field3
    from test
  </select>

  <select id="selectList"  resultMap="BaseResultMap">
    select id, field1, field2, field3
    from test
    limit #{_pagesize} OFFSET #{_skiprows}
  </select>

</mapper>